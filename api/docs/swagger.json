{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "Lambda Notes API"
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "tags": [
    {
      "name": "projects",
      "description": "Create and manage projects "
    },
    {
      "name": "tasks",
      "description": "Create and manage tasks within projects"
    },
    {
      "name": "users",
      "description":
        "Create and manage users and user settings. Handle user sessions."
    }
  ],
  "paths": {
    "/api/projects": {
      "post": {
        "tags": ["projects"]
      },
      "get": {
        "tags": ["projects"]
      }
    },
    "/api/projects/{projectId}": {
      "get": {
        "tags": ["projects"]
      },
      "put": {
        "tags": ["projects"]
      },
      "delete": {
        "tags": ["projects"]
      }
    },
    "/api/tasks": {
      "post": {
        "tags": ["tasks"]
      },
      "get": {
        "tags": ["tasks"]
      }
    },
    "/api/tasks/{taskId}": {
      "get": {
        "tags": ["tasks"]
      },
      "put": {
        "tags": ["tasks"]
      },
      "delete": {
        "tags": ["tasks"]
      }
    },
    "/api/users": {
      "post": {
        "tags": ["users"],
        "summary": "Create a new user",
        "operationId": "createUser",
        "requestBody": {
          "description": "New user object",
          "required": "true",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created new user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "String"
                    },
                    "firstName": {
                      "type": "String"
                    },
                    "lastName": {
                      "type": "String"
                    },
                    "email": {
                      "type": "String"
                    }
                  },
                  "example": {
                    "_id": "5b31ce106d04832fd1e51f59",
                    "firstName": "John",
                    "lastName": "Smith",
                    "email": "johnSmith@example.com"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request from validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "String"
                    }
                  },
                  "example": {
                    "error":
                      "User validation failed: email: {EMAIL} is not a valid email address"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "String"
                    }
                  },
                  "example": {
                    "error": "The user could not be created."
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["users"],
        "summary": "Get all existing users",
        "operationId": "getAllUsers",
        "responses": {
          "200": {
            "description": "Successfully returned array of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "String"
                      },
                      "firstName": {
                        "type": "String"
                      },
                      "lastName": {
                        "type": "String"
                      },
                      "email": {
                        "type": "String"
                      }
                    }
                  },
                  "example": [
                    {
                      "_id": "5b31ce106d04832fd1e51f59",
                      "firstName": "John",
                      "lastName": "Smith",
                      "email": "johnSmith@example.com"
                    },
                    {
                      "_id": "5b31ce106d04832fd1e51f71",
                      "firstName": "Jane",
                      "lastName": "Smith",
                      "email": "janeSmith@example.com"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "String"
                    }
                  },
                  "example": {
                    "error": "The list of users could not be retrieved."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{userId}": {
      "get": {
        "tags": ["users"],
        "summary": "Get user by id",
        "operationId": "getUserById",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "String"
            },
            "required": "true",
            "description": "The user id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "String"
                    },
                    "firstName": {
                      "type": "String"
                    },
                    "lastName": {
                      "type": "String"
                    },
                    "email": {
                      "type": "String"
                    }
                  },
                  "example": {
                    "_id": "5b31ce106d04832fd1e51f59",
                    "firstName": "John",
                    "lastName": "Smith",
                    "email": "johnSmith@example.com"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Document not found. Id does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "String"
                    }
                  },
                  "example": {
                    "error":
                      "The document with the specified ID does not exist."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "String"
                    }
                  },
                  "example": {
                    "error": "The user with id {ID} could not be retrieved."
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["users"],
        "summary": "Update all fields for an existing user",
        "operationId": "updateUser",
        "requestBody": {
          "description": "Updated user object",
          "required": "true",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/User"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "String"
            },
            "required": "true",
            "description": "The user id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "String"
                    },
                    "firstName": {
                      "type": "String"
                    },
                    "lastName": {
                      "type": "String"
                    },
                    "email": {
                      "type": "String"
                    }
                  },
                  "example": {
                    "_id": "5b31ce106d04832fd1e51f59",
                    "firstName": "John",
                    "lastName": "Smith",
                    "email": "johnSmith@example.com"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Document not found. Id does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "String"
                    }
                  },
                  "example": {
                    "error":
                      "The document with the specified ID does not exist."
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request from validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "String"
                    }
                  },
                  "example": {
                    "error":
                      "User validation failed: email: {EMAIL} is not a valid email address"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "String"
                    }
                  },
                  "example": {
                    "error": "The user with id {ID} could not be modified."
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["users"],
        "summary": "Deletes a user",
        "operationId": "deleteUser",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "String"
            },
            "required": "true",
            "description": "The user id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "String"
                    }
                  },
                  "example": {
                    "_id": "5b31ce106d04832fd1e51f59"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Document not found. Id does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "String"
                    }
                  },
                  "example": {
                    "error":
                      "The document with the specified ID does not exist."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "String"
                    }
                  },
                  "example": {
                    "error": "The user with id ${ID} could not be removed."
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Project": {
        "title": "Project",
        "required": ["title", "members"],
        "properties": {
          "title": {
            "description": "Descriptive title for project",
            "type": "String"
          },
          "description": {
            "description": "Additional details regarding project",
            "type": "String"
          },
          "members": {
            "description": "Array of user id's assigned to project",
            "type": "Array",
            "items": {
              "type": "ObjectId"
            },
            "example":
              "['5b1ed13e8cea93c6ba72b1da', '5b1ed13e8cea93c6ba72b1db', '5b1ed13e8cea93c6ba72b1dc']"
          },
          "tags": {
            "description": "Array of tag id's belonging to project",
            "type": "Array",
            "items": {
              "type": "ObjectId"
            },
            "example":
              "['5b1ed13e8cea93c6ba72b1da', '5b1ed13e8cea93c6ba72b1db', '5b1ed13e8cea93c6ba72b1dc']"
          }
        }
      },
      "Task": {
        "title": "Task",
        "required": ["project", "title"],
        "properties": {
          "project": {
            "description": "Id of existing project that task belongs to",
            "type": "ObjectId",
            "example": "5b1ed13e8cea93c6ba72b1da"
          },
          "title": {
            "description": "Descriptive title for task",
            "type": "String"
          },
          "description": {
            "description": "Additional details regarding task",
            "type": "String"
          },
          "assignee": {
            "description": "Array of user id's assigned to task",
            "type": "Array",
            "items": {
              "type": "ObjectId"
            },
            "example": "['5b1ed13e8cea93c6ba72b1da']"
          },
          "dueDate": {
            "description": "Date the task is due",
            "type": "String",
            "format": "date",
            "example": "06/24/2018"
          },
          "subtasks": {
            "description": "Array of child subtask id's",
            "type": "Array",
            "items": {
              "type": "ObjectId"
            },
            "example":
              "['5b1ed13e8cea93c6ba72b1da', '5b1ed13e8cea93c6ba72b1db', '5b1ed13e8cea93c6ba72b1dc']"
          },
          "tags": {
            "description": "Array of tag id's belonging to task",
            "type": "Array",
            "items": {
              "type": "ObjectId"
            },
            "example":
              "['5b1ed13e8cea93c6ba72b1da', '5b1ed13e8cea93c6ba72b1db', '5b1ed13e8cea93c6ba72b1dc']"
          },
          "completed": {
            "description": "Task's completed status",
            "type": "Boolean",
            "example": "false",
            "default": "false"
          },
          "comments": {
            "description": "Array of comment id's belonging to task",
            "type": "Array",
            "items": {
              "type": "ObjectId"
            },
            "example":
              "['5b1ed13e8cea93c6ba72b1da', '5b1ed13e8cea93c6ba72b1db', '5b1ed13e8cea93c6ba72b1dc']"
          },
          "attachments": {
            "description": "Array of attachment id's belonging to task",
            "type": "Array",
            "items": {
              "type": "ObjectId"
            },
            "example":
              "['5b1ed13e8cea93c6ba72b1da', '5b1ed13e8cea93c6ba72b1db', '5b1ed13e8cea93c6ba72b1dc']"
          }
        }
      },
      "User": {
        "title": "User",
        "required": ["firstName", "lastName", "email", "password"],
        "properties": {
          "firstName": {
            "description": "User's first name",
            "type": "String",
            "example": "John"
          },
          "lastName": {
            "description": "User's last name",
            "type": "String",
            "example": "Smith"
          },
          "email": {
            "description": "User's email address",
            "type": "String",
            "example": "johnsmith@example.com"
          },
          "password": {
            "description":
              "User's password containing 1 uppercase letter, 1 lowercase letter, 1 digit and 1 special character: !, @, #, $, %, &",
            "type": "String",
            "format": "password",
            "minLength": 8,
            "example": "Password@1"
          }
        }
      }
    }
  }
}
